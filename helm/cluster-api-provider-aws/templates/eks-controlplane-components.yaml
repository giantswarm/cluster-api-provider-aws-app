apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
    control-plane: controller-manager
  name: capa-eks-control-plane-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    ${AWS_CONTROLLER_IAM_ROLE/#arn/eks.amazonaws.com/role-arn: arn}
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
    control-plane: controller-manager
  name: capa-eks-control-plane-controller-manager
  namespace: capa-eks-control-plane-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
  name: capa-eks-control-plane-leader-election-role
  namespace: capa-eks-control-plane-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
  name: capa-eks-control-plane-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - controlplane.cluster.x-k8s.io
  resources:
  - awsmanagedcontrolplanes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - controlplane.cluster.x-k8s.io
  resources:
  - awsmanagedcontrolplanes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - awsmachinepools
  - awsmachinepools/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - awsmachines
  - awsmachines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - awsmanagedclusters
  - awsmanagedclusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - awsmanagedmachinepools
  - awsmanagedmachinepools/status
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
  name: capa-eks-control-plane-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
  name: capa-eks-control-plane-leader-election-rolebinding
  namespace: capa-eks-control-plane-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capa-eks-control-plane-leader-election-role
subjects:
- kind: ServiceAccount
  name: capa-eks-control-plane-controller-manager
  namespace: capa-eks-control-plane-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
  name: capa-eks-control-plane-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capa-eks-control-plane-manager-role
subjects:
- kind: ServiceAccount
  name: capa-eks-control-plane-controller-manager
  namespace: capa-eks-control-plane-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
  name: capa-eks-control-plane-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capa-eks-control-plane-proxy-role
subjects:
- kind: ServiceAccount
  name: capa-eks-control-plane-controller-manager
  namespace: capa-eks-control-plane-system
---
apiVersion: v1
data:
  credentials: ${AWS_B64ENCODED_CREDENTIALS}
kind: Secret
metadata:
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
  name: capa-eks-control-plane-controlplane-manager-bootstrap-credentials
  namespace: capa-eks-control-plane-system
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
    control-plane: controller-manager
  name: capa-eks-control-plane-controller-manager-metrics-service
  namespace: capa-eks-control-plane-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    cluster.x-k8s.io/provider: control-plane-eks
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
  name: capa-eks-control-plane-webhook-service
  namespace: capi-webhook-system
spec:
  ports:
  - port: 443
    targetPort: webhook-server
  selector:
    cluster.x-k8s.io/provider: control-plane-eks
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
    control-plane: controller-manager
  name: capa-eks-control-plane-controller-manager
  namespace: capa-eks-control-plane-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: control-plane-eks
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: control-plane-eks
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        - --feature-gates=EKSEnableIAM=${EXP_EKS_IAM:=false},EKSAllowAddRoles=${EXP_EKS_ADD_ROLES:=false},MachinePool=${EXP_MACHINE_POOL:=false}
        - --v=${EKS_CP_LOGLEVEL:=4}
        command:
        - /manager
        env:
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: /home/.aws/credentials
        - name: AWS_CONTROLLER_IAM_ROLE
          value: {{ .Values.aws.role.arn }}
        image: gcr.io/k8s-staging-cluster-api-aws/eks-controlplane-controller:v0.6.4
        imagePullPolicy: IfNotPresent
        name: manager
        volumeMounts:
        - mountPath: /home/.aws
          name: credentials
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: http
      metadata:
        annotations:
          iam.amazonaws.com/role: ${AWS_CONTROLLER_IAM_ROLE:=""}
      securityContext:
        fsGroup: 1000
      serviceAccountName: capa-eks-control-plane-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - name: credentials
        secret:
          secretName: capa-eks-control-plane-controlplane-manager-bootstrap-credentials
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
    control-plane: controller-manager
  name: capa-eks-control-plane-controller-manager
  namespace: capi-webhook-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: control-plane-eks
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: control-plane-eks
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --webhook-port=9443
        command:
        - /manager
        image: gcr.io/k8s-staging-cluster-api-aws/eks-controlplane-controller:v0.6.4
        imagePullPolicy: IfNotPresent
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: http
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capa-eks-control-plane-webhook-service-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
  name: capa-eks-control-plane-serving-cert
  namespace: capi-webhook-system
spec:
  dnsNames:
  - capa-eks-control-plane-webhook-service.capi-webhook-system.svc
  - capa-eks-control-plane-webhook-service.capi-webhook-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: capa-eks-control-plane-selfsigned-issuer
  secretName: capa-eks-control-plane-webhook-service-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
  name: capa-eks-control-plane-selfsigned-issuer
  namespace: capi-webhook-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-eks-control-plane-serving-cert
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
  name: capa-eks-control-plane-mutating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: capa-eks-control-plane-webhook-service
      namespace: capi-webhook-system
      path: /mutate-controlplane-cluster-x-k8s-io-v1alpha3-awsmanagedcontrolplane
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.awsmanagedcontrolplanes.controlplane.cluster.x-k8s.io
  rules:
  - apiGroups:
    - controlplane.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - awsmanagedcontrolplanes
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-eks-control-plane-serving-cert
  labels:
    cluster.x-k8s.io/provider: control-plane-eks
  name: capa-eks-control-plane-validating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: capa-eks-control-plane-webhook-service
      namespace: capi-webhook-system
      path: /validate-controlplane-cluster-x-k8s-io-v1alpha3-awsmanagedcontrolplane
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.awsmanagedcontrolplanes.controlplane.cluster.x-k8s.io
  rules:
  - apiGroups:
    - controlplane.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - awsmanagedcontrolplanes
  sideEffects: None
