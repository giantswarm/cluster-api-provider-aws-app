apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    ignore-check.kube-linter.io/unset-cpu-requirements: We don't want a CPU limit
  labels:
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ .Chart.Name }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    application.giantswarm.io/team: '{{ index .Chart.Annotations "application.giantswarm.io/team"
      }}'
    cluster.x-k8s.io/provider: infrastructure-aws
    control-plane: capa-controller-manager
    helm.sh/chart: '{{ .Chart.Name }}'
  name: capa-controller-manager
  namespace: '{{ .Release.Namespace }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-aws
      control-plane: capa-controller-manager
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: '{{ .Values.aws.arn }}:=""'
      labels:
        app.kubernetes.io/instance: '{{ .Release.Name }}'
        app.kubernetes.io/managed-by: '{{ .Release.Service }}'
        app.kubernetes.io/name: '{{ .Chart.Name }}'
        app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
        application.giantswarm.io/team: '{{ index .Chart.Annotations "application.giantswarm.io/team"
          }}'
        cluster.x-k8s.io/provider: infrastructure-aws
        control-plane: capa-controller-manager
        helm.sh/chart: '{{ .Chart.Name }}'
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
            weight: 10
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
            weight: 10
      containers:
      - args:
        - --leader-elect
        - --metrics-bind-addr=0.0.0.0:8443
        - |
          --feature-gates=EKS=true,EKSEnableIAM=true,EKSAllowAddRoles=false,EKSFargate=false,MachinePool=true,MachinePoolMachines={{ required "capaFeatureGates.machinePoolMachines is required" .Values.capaFeatureGates.machinePoolMachines | ternary "true" "false" }},EventBridgeInstanceState=false,AutoControllerIdentityCreator=true,ExternalResourceGC=true,BootstrapFormatIgnition=true
        - --watch-filter=capi
        - --sync-period=2m
        - --v=0
        env:
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: /home/.aws/credentials
        image: '{{.Values.registry.domain}}/{{.Values.image.name}}:{{.Values.tag}}'
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
          periodSeconds: 10
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        - containerPort: 8443
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        resources:
          limits:
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 250Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 65532
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /home/.aws
          name: credentials
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: capa-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node.cluster.x-k8s.io/uninitialized
        operator: Exists
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capa-webhook-service-cert
      - name: credentials
        secret:
          secretName: capa-manager-bootstrap-credentials
