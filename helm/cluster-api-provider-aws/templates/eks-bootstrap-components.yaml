apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
    control-plane: controller-manager
  name: capa-eks-bootstrap-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    {{ .Values.aws.role.arn }}/#arn/eks.amazonaws.com/role-arn: arn
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
    control-plane: controller-manager
  name: capa-eks-bootstrap-controller-manager
  namespace: capa-eks-bootstrap-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
  name: capa-eks-bootstrap-leader-election-role
  namespace: capa-eks-bootstrap-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
  name: capa-eks-bootstrap-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - bootstrap.cluster.x-k8s.io
  resources:
  - eksconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - bootstrap.cluster.x-k8s.io
  resources:
  - eksconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - machinepools
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - controlplane.cluster.x-k8s.io
  resources:
  - awsmanagedcontrolplanes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - exp.cluster.x-k8s.io
  resources:
  - machinepools
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
  name: capa-eks-bootstrap-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
  name: capa-eks-bootstrap-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
  name: capa-eks-bootstrap-leader-election-rolebinding
  namespace: capa-eks-bootstrap-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capa-eks-bootstrap-leader-election-role
subjects:
- kind: ServiceAccount
  name: capa-eks-bootstrap-controller-manager
  namespace: capa-eks-bootstrap-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
  name: capa-eks-bootstrap-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capa-eks-bootstrap-manager-role
subjects:
- kind: ServiceAccount
  name: capa-eks-bootstrap-controller-manager
  namespace: capa-eks-bootstrap-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
  name: capa-eks-bootstrap-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capa-eks-bootstrap-proxy-role
subjects:
- kind: ServiceAccount
  name: capa-eks-bootstrap-controller-manager
  namespace: capa-eks-bootstrap-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
    control-plane: controller-manager
  name: capa-eks-bootstrap-controller-manager-metrics-service
  namespace: capa-eks-bootstrap-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    cluster.x-k8s.io/provider: bootstrap-eks
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: bootstrap-eks
    control-plane: controller-manager
  name: {{ include "resource.default.name" . }}-bootstrap-cm
  namespace: capa-eks-bootstrap-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: bootstrap-eks
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: bootstrap-eks
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        - --feature-gates=MachinePool=false
        command:
        - /manager
        image: gcr.io/k8s-staging-cluster-api-aws/eks-bootstrap-controller:v0.6.4
        imagePullPolicy: Always
        name: manager
      metadata:
        annotations:
          iam.amazonaws.com/role: {{ .Values.aws.role.arn }}:=""
      securityContext:
        fsGroup: 1000
      serviceAccountName: capa-eks-bootstrap-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
