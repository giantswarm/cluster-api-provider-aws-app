apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: capa-controller-manager
    {{- include "labels.infrastructure" . | nindent 4 }}
  name: {{ include "resource.default.name" . }}
  namespace: {{ include "resource.default.namespace" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: capa-controller-manager
      {{- include "labels.selector.infrastructure" . | nindent 6 }}
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: {{ .Values.aws.arn }}:=""
      labels:
        component: capa-controller-manager
        {{- include "labels.infrastructure" . | nindent 8 }}
    spec:
      containers:
      - args:
        - --webhook-port={{ .Values.ports.webhook }}
        - --feature-gates=EKSEnableIAM={{ .Values.featuregates.eksenableiam }},MachinePool={{ .Values.featuregates.machinepool }},EventBridgeInstanceState={{ .Values.featuregates.eventbridgeinstancestate }},AutoControllerIdentityCreator={{ .Values.featuregates.autocontrolleridentitycreator }}
        - --watch-filter={{ .Values.watchfilter }}
        env:
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: /home/.aws/credentials
        image: "{{ .Values.registry.domain }}/{{ .Values.infrastructure.image.name }}:{{ .Values.tag }}"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: {{ .Values.ports.metrics }}
          name: http
          protocol: TCP
        - containerPort: {{ .Values.ports.webhook }}
          name: webhook-server
          protocol: TCP
        - containerPort: {{ .Values.ports.healthz }}
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        volumeMounts:
        - mountPath: /home/.aws
          name: credentials
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        fsGroup: 1000
      serviceAccountName: {{ include "resource.default.name" . }}
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: credentials
        secret:
          secretName: {{ include "resource.default.name" . }}-aws-credentials
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ include "resource.default.name" . }}-webhook
